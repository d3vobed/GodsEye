#include <iostream>
#include <chrono>

// Replace with the actual function you want to benchmark
void function_to_benchmark(int n) {
  // Simulate some work
  for (int i = 0; i < n; ++i) {
    // Do something computationally expensive
  }
}

int main() {
  // Warm-up the function
  function_to_benchmark(100);

  // Start time measurement
  auto start = std::chrono::high_resolution_clock::now();

  // Run the function multiple times and measure average time
  int iterations = 1000;
  double total_time = 0;
  for (int i = 0; i < iterations; ++i) {
    function_to_benchmark(1000);
    total_time += std::chrono::duration_cast<std::chrono::microseconds>(
        std::chrono::high_resolution_clock::now() - start
    ).count();
    start = std::chrono::high_resolution_clock::now();
  }

  double average_time = total_time / iterations;

  std::cout << "Average execution time: " << average_time << " microseconds" << std::endl;

  return 0;
}
